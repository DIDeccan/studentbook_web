# version: '3.9'

# services:
#   web:
#     build: .
#     container_name: django_app
#     ports:
#       - "8000:8000"
#     volumes:
#       - .:/app
#     env_file:
#       - .env
#     depends_on:
#       - db

#   db:
#     image: postgres:14
#     container_name: postgres_db
#     env_file:
#       - .env
#     environment:
#       POSTGRES_DB: ${DB_NAME}
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#     ports:
#       - "5432:5432"

version: '3.8'

services:
  db:
    image: postgres:latest
    ports:
      - "5433:5432"
    
    environment:
      DB_NAME: "${DB_NAME}"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - studentBook-network
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    networks:
      - studentBook-network

  web:
    build: 
      context: ./BackEnd
    command: python dist/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./BackEnd:/code
      - ./BackEnd/dist/media:/code/dist/media
      - ./BackEnd/dist/static:/code/dist/static
    ports:
      - "8000:8000"
    env_file:
      - ./BackEnd/.env
    environment:
      - DB_HOST=db   # ðŸ‘ˆ inside Docker, connect to postgres service
      - DB_PORT=5432
    depends_on:
      - db
      - redis
    networks:
      - studentBook-network


networks:
  studentBook-network:
    driver: bridge
